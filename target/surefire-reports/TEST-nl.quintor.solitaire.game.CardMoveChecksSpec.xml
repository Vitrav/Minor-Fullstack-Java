<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.266" tests="57" errors="0" skipped="0" failures="22">
  <properties>
    <property name="java.specification.version" value="14"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/dave/Downloads/solitair-student/target/test-classes:/Users/dave/Downloads/solitair-student/target/classes:/Users/dave/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/dave/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/dave/.m2/repository/org/assertj/assertj-core/3.8.0/assertj-core-3.8.0.jar:/Users/dave/.m2/repository/org/spockframework/spock-core/1.1-groovy-2.4/spock-core-1.1-groovy-2.4.jar:/Users/dave/.m2/repository/org/codehaus/groovy/groovy-all/2.4.15/groovy-all-2.4.15.jar:/Users/dave/.m2/repository/com/athaydes/spock-reports/1.5.0/spock-reports-1.5.0.jar:/Users/dave/.m2/repository/org/slf4j/slf4j-api/1.7.13/slf4j-api-1.7.13.jar:/Users/dave/.m2/repository/org/slf4j/slf4j-simple/1.7.13/slf4j-simple-1.7.13.jar:"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="14"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="NL"/>
    <property name="sun.boot.library.path" value="/Users/dave/Library/Java/JavaVirtualMachines/openjdk-14.0.2/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/dave/Downloads/solitair-student/target/surefire/surefirebooter4998865021421595047.jar /Users/dave/Downloads/solitair-student/target/surefire 2020-09-14T17-49-12_481-jvmRun1 surefire5187564882986612237tmp surefire_0796794214177327587tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/dave/Downloads/solitair-student/target/test-classes:/Users/dave/Downloads/solitair-student/target/classes:/Users/dave/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/dave/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/dave/.m2/repository/org/assertj/assertj-core/3.8.0/assertj-core-3.8.0.jar:/Users/dave/.m2/repository/org/spockframework/spock-core/1.1-groovy-2.4/spock-core-1.1-groovy-2.4.jar:/Users/dave/.m2/repository/org/codehaus/groovy/groovy-all/2.4.15/groovy-all-2.4.15.jar:/Users/dave/.m2/repository/com/athaydes/spock-reports/1.5.0/spock-reports-1.5.0.jar:/Users/dave/.m2/repository/org/slf4j/slf4j-api/1.7.13/slf4j-api-1.7.13.jar:/Users/dave/.m2/repository/org/slf4j/slf4j-simple/1.7.13/slf4j-simple-1.7.13.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/dave"/>
    <property name="user.language" value="nl"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2020-07-14"/>
    <property name="java.home" value="/Users/dave/Library/Java/JavaVirtualMachines/openjdk-14.0.2/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/dave/Downloads/solitair-student"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="surefire.real.class.path" value="/Users/dave/Downloads/solitair-student/target/surefire/surefirebooter4998865021421595047.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="14.0.2+12-46"/>
    <property name="user.name" value="dave"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="10.15.5"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="/Users/dave/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/var/folders/7y/_wb6k5hd39x544nlk55rx3wm0000gn/T/"/>
    <property name="idea.version" value="2020.2.1"/>
    <property name="java.version" value="14.0.2"/>
    <property name="user.dir" value="/Users/dave/Downloads/solitair-student"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.library.path" value="/Users/dave/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="14.0.2+12-46"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="58.0"/>
  </properties>
  <testcase name="Invalid input calling checkPlayerInput whith [M, Z, G] will throw MoveException with message |Invalid Move syntax. &quot;Z&quot; is not a valid source location.&#10;See H̲elp for instructions.| when testing: Invalid source move" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.004">
    <failure message="Expected exception of type &apos;nl.quintor.solitaire.game.moves.ex.MoveException&apos;, but no exception was thrown" type="org.spockframework.runtime.WrongExceptionThrownError">org.spockframework.runtime.WrongExceptionThrownError: Expected exception of type 'nl.quintor.solitaire.game.moves.ex.MoveException', but no exception was thrown
	at nl.quintor.solitaire.game.CardMoveChecksSpec.Invalid input calling checkPlayerInput whith #input will throw #exception.getSimpleName() with message |#message| when testing: #testcase(CardMoveChecksSpec.groovy:20)
</failure>
  </testcase>
  <testcase name="Invalid input calling checkPlayerInput whith [M, O, Z] will throw MoveException with message |Invalid Move syntax. &quot;Z&quot; is not a valid destination location.&#10;See H̲elp for instructions.| when testing: Invalid destination move" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001">
    <failure message="Expected exception of type &apos;nl.quintor.solitaire.game.moves.ex.MoveException&apos;, but no exception was thrown" type="org.spockframework.runtime.WrongExceptionThrownError">org.spockframework.runtime.WrongExceptionThrownError: Expected exception of type 'nl.quintor.solitaire.game.moves.ex.MoveException', but no exception was thrown
	at nl.quintor.solitaire.game.CardMoveChecksSpec.Invalid input calling checkPlayerInput whith #input will throw #exception.getSimpleName() with message |#message| when testing: #testcase(CardMoveChecksSpec.groovy:20)
</failure>
  </testcase>
  <testcase name="Valid moves will not throw exceptions testing: Valid move between columns" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Valid moves will not throw exceptions testing: Valid move between column and stack" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Valid moves will not throw exceptions testing: Valid move between stock and stack" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Valid moves will not throw exceptions testing: Valid move between stock and column" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Valid input calling deckLevelChecks will not throw exception testing: Column source and Stack destination" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Valid input calling deckLevelChecks will not throw exception testing: Column source and destination" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Valid input calling deckLevelChecks will not throw exception testing: Stack source and Column destination" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Calling deckLevelChecks with same source and destination will throw exception" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.004">
    <failure message="Expected exception of type &apos;nl.quintor.solitaire.game.moves.ex.MoveException&apos;, but no exception was thrown" type="org.spockframework.runtime.WrongExceptionThrownError">org.spockframework.runtime.WrongExceptionThrownError: Expected exception of type 'nl.quintor.solitaire.game.moves.ex.MoveException', but no exception was thrown
	at nl.quintor.solitaire.game.CardMoveChecksSpec.Calling deckLevelChecks with same source and destination will throw exception(CardMoveChecksSpec.groovy:61)
</failure>
  </testcase>
  <testcase name="Invalid input calling deckLevelChecks will throw exception with message: |You can&apos;t move a card from an empty deck| testing: Moving cards from empty deck should not be possible" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001">
    <failure message="Expected exception of type &apos;nl.quintor.solitaire.game.moves.ex.MoveException&apos;, but no exception was thrown" type="org.spockframework.runtime.WrongExceptionThrownError">org.spockframework.runtime.WrongExceptionThrownError: Expected exception of type 'nl.quintor.solitaire.game.moves.ex.MoveException', but no exception was thrown
	at nl.quintor.solitaire.game.CardMoveChecksSpec.Invalid input calling deckLevelChecks will throw exception with message: |#exceptionMessage| testing: #testcase(CardMoveChecksSpec.groovy:70)
</failure>
  </testcase>
  <testcase name="Invalid input calling deckLevelChecks will throw exception with message: |You can&apos;t move cards to the stock| testing: Moving cards to stock is not allowed" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001">
    <failure message="Expected exception of type &apos;nl.quintor.solitaire.game.moves.ex.MoveException&apos;, but no exception was thrown" type="org.spockframework.runtime.WrongExceptionThrownError">org.spockframework.runtime.WrongExceptionThrownError: Expected exception of type 'nl.quintor.solitaire.game.moves.ex.MoveException', but no exception was thrown
	at nl.quintor.solitaire.game.CardMoveChecksSpec.Invalid input calling deckLevelChecks will throw exception with message: |#exceptionMessage| testing: #testcase(CardMoveChecksSpec.groovy:70)
</failure>
  </testcase>
  <testcase name="Invalid input calling deckLevelChecks will throw exception with message: |You can&apos;t move more than 1 card at a time to a Stack Pile| testing: Moving multiple cards is not allowed" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001">
    <failure message="Expected exception of type &apos;nl.quintor.solitaire.game.moves.ex.MoveException&apos;, but no exception was thrown" type="org.spockframework.runtime.WrongExceptionThrownError">org.spockframework.runtime.WrongExceptionThrownError: Expected exception of type 'nl.quintor.solitaire.game.moves.ex.MoveException', but no exception was thrown
	at nl.quintor.solitaire.game.CardMoveChecksSpec.Invalid input calling deckLevelChecks will throw exception with message: |#exceptionMessage| testing: #testcase(CardMoveChecksSpec.groovy:70)
</failure>
  </testcase>
  <testcase name="Invalid input calling deckLevelChecks will throw exception with message: |You can&apos;t move an invisible card| testing: Moving invisible cards is not allowed" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.003">
    <failure message="Expected exception of type &apos;nl.quintor.solitaire.game.moves.ex.MoveException&apos;, but no exception was thrown" type="org.spockframework.runtime.WrongExceptionThrownError">org.spockframework.runtime.WrongExceptionThrownError: Expected exception of type 'nl.quintor.solitaire.game.moves.ex.MoveException', but no exception was thrown
	at nl.quintor.solitaire.game.CardMoveChecksSpec.Invalid input calling deckLevelChecks will throw exception with message: |#exceptionMessage| testing: #testcase(CardMoveChecksSpec.groovy:70)
</failure>
  </testcase>
  <testcase name="valid input calling deckLevelChecks does not throw exceptions testing: Moving card from column to stack should be allowed" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001"/>
  <testcase name="valid input calling deckLevelChecks does not throw exceptions testing: Moving card from column to column should be allowed" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="valid input calling deckLevelChecks does not throw exceptions testing: Moving card from stock to column should be allowed" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Invalid input calling cardLevelCheck will throw exception with message Target deck is neither Stack nor Column. testing: Moving card to deck should only be allowed to Stack or column deck" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.002">
    <failure message="Expected exception of type &apos;nl.quintor.solitaire.game.moves.ex.MoveException&apos;, but no exception was thrown" type="org.spockframework.runtime.WrongExceptionThrownError">org.spockframework.runtime.WrongExceptionThrownError: Expected exception of type 'nl.quintor.solitaire.game.moves.ex.MoveException', but no exception was thrown
	at nl.quintor.solitaire.game.CardMoveChecksSpec.Invalid input calling cardLevelCheck will throw exception with message #exceptionMessage testing: #testCase(CardMoveChecksSpec.groovy:96)
</failure>
  </testcase>
  <testcase name="Invalid input calling cardLevelCheck will throw exception with message An Ace has to be the first card of a Stack Pile testing: Moving card not being an ace to an empty stack" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001">
    <failure message="Expected exception of type &apos;nl.quintor.solitaire.game.moves.ex.MoveException&apos;, but no exception was thrown" type="org.spockframework.runtime.WrongExceptionThrownError">org.spockframework.runtime.WrongExceptionThrownError: Expected exception of type 'nl.quintor.solitaire.game.moves.ex.MoveException', but no exception was thrown
	at nl.quintor.solitaire.game.CardMoveChecksSpec.Invalid input calling cardLevelCheck will throw exception with message #exceptionMessage testing: #testCase(CardMoveChecksSpec.groovy:96)
</failure>
  </testcase>
  <testcase name="Invalid input calling cardLevelCheck will throw exception with message Stack Piles hold same-suit cards of increasing Rank from Ace to King testing: Moving card to stack should be increasing" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001">
    <failure message="Expected exception of type &apos;nl.quintor.solitaire.game.moves.ex.MoveException&apos;, but no exception was thrown" type="org.spockframework.runtime.WrongExceptionThrownError">org.spockframework.runtime.WrongExceptionThrownError: Expected exception of type 'nl.quintor.solitaire.game.moves.ex.MoveException', but no exception was thrown
	at nl.quintor.solitaire.game.CardMoveChecksSpec.Invalid input calling cardLevelCheck will throw exception with message #exceptionMessage testing: #testCase(CardMoveChecksSpec.groovy:96)
</failure>
  </testcase>
  <testcase name="Invalid input calling cardLevelCheck will throw exception with message Stack Piles can only contain same-suit cards testing: Moving card to stack should be same suit" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001">
    <failure message="Expected exception of type &apos;nl.quintor.solitaire.game.moves.ex.MoveException&apos;, but no exception was thrown" type="org.spockframework.runtime.WrongExceptionThrownError">org.spockframework.runtime.WrongExceptionThrownError: Expected exception of type 'nl.quintor.solitaire.game.moves.ex.MoveException', but no exception was thrown
	at nl.quintor.solitaire.game.CardMoveChecksSpec.Invalid input calling cardLevelCheck will throw exception with message #exceptionMessage testing: #testCase(CardMoveChecksSpec.groovy:96)
</failure>
  </testcase>
  <testcase name="Invalid input calling cardLevelCheck will throw exception with message A King has to be the first card of a Column testing: Moving card to empty column can only be a King" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001">
    <failure message="Expected exception of type &apos;nl.quintor.solitaire.game.moves.ex.MoveException&apos;, but no exception was thrown" type="org.spockframework.runtime.WrongExceptionThrownError">org.spockframework.runtime.WrongExceptionThrownError: Expected exception of type 'nl.quintor.solitaire.game.moves.ex.MoveException', but no exception was thrown
	at nl.quintor.solitaire.game.CardMoveChecksSpec.Invalid input calling cardLevelCheck will throw exception with message #exceptionMessage testing: #testCase(CardMoveChecksSpec.groovy:96)
</failure>
  </testcase>
  <testcase name="Invalid input calling cardLevelCheck will throw exception with message Column cards have te alternate colors (red and black) testing: Moving card to column must be opposite suit" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001">
    <failure message="Expected exception of type &apos;nl.quintor.solitaire.game.moves.ex.MoveException&apos;, but no exception was thrown" type="org.spockframework.runtime.WrongExceptionThrownError">org.spockframework.runtime.WrongExceptionThrownError: Expected exception of type 'nl.quintor.solitaire.game.moves.ex.MoveException', but no exception was thrown
	at nl.quintor.solitaire.game.CardMoveChecksSpec.Invalid input calling cardLevelCheck will throw exception with message #exceptionMessage testing: #testCase(CardMoveChecksSpec.groovy:96)
</failure>
  </testcase>
  <testcase name="Invalid input calling cardLevelCheck will throw exception with message Columns hold alternating-color cards of decreasing rank from King to Two testing: Moving card to column must be in descending rank" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001">
    <failure message="Expected exception of type &apos;nl.quintor.solitaire.game.moves.ex.MoveException&apos;, but no exception was thrown" type="org.spockframework.runtime.WrongExceptionThrownError">org.spockframework.runtime.WrongExceptionThrownError: Expected exception of type 'nl.quintor.solitaire.game.moves.ex.MoveException', but no exception was thrown
	at nl.quintor.solitaire.game.CardMoveChecksSpec.Invalid input calling cardLevelCheck will throw exception with message #exceptionMessage testing: #testCase(CardMoveChecksSpec.groovy:96)
</failure>
  </testcase>
  <testcase name="Valid input calling cardLevelChecks will not throw exceptions testing : Ace should be allowed on empty stack" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Valid input calling cardLevelChecks will not throw exceptions testing : two should be allowed in stack containing ace" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Valid input calling cardLevelChecks will not throw exceptions testing : King should be allowed as first card in a column deck" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Valid input calling cardLevelChecks will not throw exceptions testing : column deck with Diamond card should allow club card with decreased value of one" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001"/>
  <testcase name="Valid input calling cardLevelChecks will not throw exceptions testing : column deck with Diamond card should allow spade card with decreased value of one" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001"/>
  <testcase name="Valid input calling cardLevelChecks will not throw exceptions testing : column deck with hearts card should allow spade card with decreased value of one" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001"/>
  <testcase name="Valid input calling cardLevelChecks will not throw exceptions testing : column deck with hearts card should allow club card with decreased value of one" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.002"/>
  <testcase name="Valid input calling cardLevelChecks will not throw exceptions testing : column deck with clubs card should allow hearts card with decreased value of one" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Valid input calling cardLevelChecks will not throw exceptions testing : column deck with clubs card should allow diamond card with decreased value of one" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Valid input calling cardLevelChecks will not throw exceptions testing : column deck with spade card should allow hearts card with decreased value of one" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001"/>
  <testcase name="Valid input calling cardLevelChecks will not throw exceptions testing : column deck with spade card should allow diamond card with decreased value of one" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Given the cards DIAMONDS JACK, DIAMONDS FIVE the method opposingCards will return false" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.003">
    <failure message="Condition not satisfied:&#10;&#10;actualResult == expectedResult&#10;|            |  |&#10;true         |  false&#10;             false&#10;" type="org.spockframework.runtime.SpockComparisonFailure">org.spockframework.runtime.SpockComparisonFailure: 
Condition not satisfied:

actualResult == expectedResult
|            |  |
true         |  false
             false

	at nl.quintor.solitaire.game.CardMoveChecksSpec.Given the cards #cardLeft, #cardRight the method opposingCards will return #expectedResult(CardMoveChecksSpec.groovy:132)
</failure>
  </testcase>
  <testcase name="Given the cards DIAMONDS JACK, HEARTS FIVE the method opposingCards will return false" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.003">
    <failure message="Condition not satisfied:&#10;&#10;actualResult == expectedResult&#10;|            |  |&#10;true         |  false&#10;             false&#10;" type="org.spockframework.runtime.SpockComparisonFailure">org.spockframework.runtime.SpockComparisonFailure: 
Condition not satisfied:

actualResult == expectedResult
|            |  |
true         |  false
             false

	at nl.quintor.solitaire.game.CardMoveChecksSpec.Given the cards #cardLeft, #cardRight the method opposingCards will return #expectedResult(CardMoveChecksSpec.groovy:132)
</failure>
  </testcase>
  <testcase name="Given the cards DIAMONDS JACK, SPADES SEVEN the method opposingCards will return true" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Given the cards DIAMONDS JACK, CLUBS FIVE the method opposingCards will return true" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001"/>
  <testcase name="Given the cards HEARTS TWO, HEARTS KING the method opposingCards will return false" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.002">
    <failure message="Condition not satisfied:&#10;&#10;actualResult == expectedResult&#10;|            |  |&#10;true         |  false&#10;             false&#10;" type="org.spockframework.runtime.SpockComparisonFailure">org.spockframework.runtime.SpockComparisonFailure: 
Condition not satisfied:

actualResult == expectedResult
|            |  |
true         |  false
             false

	at nl.quintor.solitaire.game.CardMoveChecksSpec.Given the cards #cardLeft, #cardRight the method opposingCards will return #expectedResult(CardMoveChecksSpec.groovy:132)
</failure>
  </testcase>
  <testcase name="Given the cards HEARTS TWO, DIAMONDS KING the method opposingCards will return false" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.002">
    <failure message="Condition not satisfied:&#10;&#10;actualResult == expectedResult&#10;|            |  |&#10;true         |  false&#10;             false&#10;" type="org.spockframework.runtime.SpockComparisonFailure">org.spockframework.runtime.SpockComparisonFailure: 
Condition not satisfied:

actualResult == expectedResult
|            |  |
true         |  false
             false

	at nl.quintor.solitaire.game.CardMoveChecksSpec.Given the cards #cardLeft, #cardRight the method opposingCards will return #expectedResult(CardMoveChecksSpec.groovy:132)
</failure>
  </testcase>
  <testcase name="Given the cards HEARTS TWO, SPADES KING the method opposingCards will return true" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.002"/>
  <testcase name="Given the cards HEARTS TWO, CLUBS KING the method opposingCards will return true" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001"/>
  <testcase name="Given the cards CLUBS FIVE, CLUBS ACE the method opposingCards will return false" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.002">
    <failure message="Condition not satisfied:&#10;&#10;actualResult == expectedResult&#10;|            |  |&#10;true         |  false&#10;             false&#10;" type="org.spockframework.runtime.SpockComparisonFailure">org.spockframework.runtime.SpockComparisonFailure: 
Condition not satisfied:

actualResult == expectedResult
|            |  |
true         |  false
             false

	at nl.quintor.solitaire.game.CardMoveChecksSpec.Given the cards #cardLeft, #cardRight the method opposingCards will return #expectedResult(CardMoveChecksSpec.groovy:132)
</failure>
  </testcase>
  <testcase name="Given the cards CLUBS FIVE, SPADES ACE the method opposingCards will return false" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.002">
    <failure message="Condition not satisfied:&#10;&#10;actualResult == expectedResult&#10;|            |  |&#10;true         |  false&#10;             false&#10;" type="org.spockframework.runtime.SpockComparisonFailure">org.spockframework.runtime.SpockComparisonFailure: 
Condition not satisfied:

actualResult == expectedResult
|            |  |
true         |  false
             false

	at nl.quintor.solitaire.game.CardMoveChecksSpec.Given the cards #cardLeft, #cardRight the method opposingCards will return #expectedResult(CardMoveChecksSpec.groovy:132)
</failure>
  </testcase>
  <testcase name="Given the cards CLUBS FIVE, DIAMONDS ACE the method opposingCards will return true" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Given the cards CLUBS FIVE, HEARTS ACE the method opposingCards will return true" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Given the cards SPADES TEN, SPADES QUEEN the method opposingCards will return false" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.002">
    <failure message="Condition not satisfied:&#10;&#10;actualResult == expectedResult&#10;|            |  |&#10;true         |  false&#10;             false&#10;" type="org.spockframework.runtime.SpockComparisonFailure">org.spockframework.runtime.SpockComparisonFailure: 
Condition not satisfied:

actualResult == expectedResult
|            |  |
true         |  false
             false

	at nl.quintor.solitaire.game.CardMoveChecksSpec.Given the cards #cardLeft, #cardRight the method opposingCards will return #expectedResult(CardMoveChecksSpec.groovy:132)
</failure>
  </testcase>
  <testcase name="Given the cards SPADES TEN, CLUBS QUEEN the method opposingCards will return false" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.002">
    <failure message="Condition not satisfied:&#10;&#10;actualResult == expectedResult&#10;|            |  |&#10;true         |  false&#10;             false&#10;" type="org.spockframework.runtime.SpockComparisonFailure">org.spockframework.runtime.SpockComparisonFailure: 
Condition not satisfied:

actualResult == expectedResult
|            |  |
true         |  false
             false

	at nl.quintor.solitaire.game.CardMoveChecksSpec.Given the cards #cardLeft, #cardRight the method opposingCards will return #expectedResult(CardMoveChecksSpec.groovy:132)
</failure>
  </testcase>
  <testcase name="Given the cards SPADES TEN, DIAMONDS QUEEN the method opposingCards will return true" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.002"/>
  <testcase name="Given the cards SPADES TEN, HEARTS QUEEN the method opposingCards will return true" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001"/>
  <testcase name="Given SPADES TEN redSuit should return false" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Given CLUBS TEN redSuit should return false" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Given DIAMONDS TEN redSuit should return true" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001"/>
  <testcase name="Given HEARTS TEN redSuit should return true" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0"/>
  <testcase name="Given a JOKER JOKER_BLACK redSuit should throw a exception" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001"/>
  <testcase name="Given a JOKER JOKER_RED redSuit should throw a exception" classname="nl.quintor.solitaire.game.CardMoveChecksSpec" time="0.001"/>
</testsuite>